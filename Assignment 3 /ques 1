#include <iostream>
using namespace std;

class stack{
private:
  int *arr;
  int top;
  int capacity;
  
  public:
  stack(int size)
  {
      capacity=size;
      arr=new int[capacity];
      top=-1;
      
  }
  ~stack()
  {
      delete[]arr;
  }
  
  bool isEmpty()
  {
      if (top==-1)
      return true;
      else 
      return false;
      
  }
  bool isFull()
  {
      if(top==capacity-1)
      return true;
      else
      return false;
  }
  
  void push(int item)
  {
      if(isFull())
      cout<<"satck is full"<<item<<endl;
      else
      {
          arr[++top]=item;
          cout<<item<<" pushed into stack"<<endl;
      }
  }
 
  void pop( ){
      if(isEmpty())
      cout<<"stack is empty "<<endl;
      else 
      cout<<"poped item is: "<<arr[top--]<<endl;
  }
  
  void peek(){
      if(isEmpty())
      {
          cout<<"stack is empty: no peek value"<<endl;
      }
      else
      cout<<"peek value is: "<<arr[top]<<endl;
  }
  void display()
  {
      if(isEmpty())
      {
          cout<<"satck is empty"<<endl;
      }
      else{
      cout<<" elements are:  "<<endl;
      for(int i=top;i>=0;i--)
      {
          cout<<arr[i]<<endl;
      }
      }
  }
};

int main()
{
     int size;
    cout << "Enter the maximum size of the stack: ";
    cin >> size;

    stack s(size);
    int choice, value;

    while (true) {
        cout << "\n--- Stack Menu ---" << endl;
        cout << "1. Push" << endl;
        cout << "2. Pop" << endl;
        cout << "3. isEmpty" << endl;
        cout << "4. isFull" << endl;
        cout << "5. Display" << endl;
        cout << "6. Peek" << endl;
        cout << "7. Exit" << endl;
        cout << "Enter your choice (1-7): ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter value to push: ";
                cin >> value;
                s.push(value);
                break;

            case 2:
                s.pop();
                break;

            case 3:
                if (s.isEmpty())
                    cout << "Stack is empty." << endl;
                else
                    cout << "Stack is not empty." << endl;
                break;

            case 4:
                if (s.isFull())
                    cout << "Stack is full." << endl;
                else
                    cout << "Stack is not full." << endl;
                break;

            case 5:
                s.display();
                break;

            case 6:
                s.peek();
                break;

            case 7:
                cout << "Exiting program." << endl;
                return 0;

            default:
                cout << "Invalid choice! Please select from 1 to 7." << endl;
        }
    }


    return 0;
}
